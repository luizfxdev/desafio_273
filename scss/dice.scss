@use 'sass:color';
@use 'sass:math';

// dice.scss - Estilos dos Dados REALMENTE CENTRALIZADOS
// Variáveis para personalização dos dados
$dice-bg: #f6f3f0;
$dice-border: #ffffff;
$dice-dot-primary: #9d4edd;
$dice-dot-secondary: #131210;
$dice-radius: 20px;
$dice-size: 100px;
$dice-shadow-color: rgba(157, 78, 221, 0.3);

// Mixin para estilizar as faces dos dados
@mixin diceFaceStyle {
  box-sizing: border-box;
  position: absolute;
  width: $dice-size;
  height: $dice-size;
  background-color: $dice-bg;
  border: 2px solid $dice-border;
  border-radius: $dice-radius;
  transform-style: preserve-3d;
  transition: 0.5s;

  // Fundo branco atrás
  &::before {
    position: absolute;
    content: '';
    width: 100%;
    height: 100%;
    background-color: color.scale($dice-bg, $lightness: 10%);
    border-radius: $dice-radius;
    transform: translateZ(-1px);
  }

  // Ponto central padrão
  &::after {
    position: absolute;
    content: '';
    width: 20px;
    height: 20px;
    top: 50%;
    left: 50%;
    margin: -10px 0 0 -10px;
    background-color: $dice-dot-secondary;
    border-radius: 100%;
    transform: translateZ(1px);
  }
}

// Estilos das faces do dado
.diceFace {
  @include diceFaceStyle;
}

// Face 1 (front) - 1 ponto grande roxo
.front {
  transform: translateZ(50px);
  &::after {
    width: 40px;
    height: 40px;
    margin: -20px 0 0 -20px;
    background-color: $dice-dot-primary;
  }
}

// Face 2 (up) - 2 pontos diagonais
.up {
  transform: rotateX(90deg) translateZ(50px);
  &::after {
    margin: -30px 0 0 -30px;
    box-shadow: 40px 40px $dice-dot-secondary;
  }
}

// Face 3 (left) - 3 pontos diagonais
.left {
  transform: rotateY(-90deg) translateZ(50px);
  &::after {
    margin: -40px 0 0 -40px;
    box-shadow: 30px 30px $dice-dot-secondary, 60px 60px $dice-dot-secondary;
  }
}

// Face 4 (right) - 4 pontos nos cantos
.right {
  transform: rotateY(90deg) translateZ(50px);
  &::after {
    margin: -30px 0 0 -30px;
    background-color: $dice-dot-primary;
    box-shadow: 40px 0px $dice-dot-primary, 0px 40px $dice-dot-primary, 40px 40px $dice-dot-primary;
  }
}

// Face 5 (bottom) - 5 pontos (4 cantos + centro)
.bottom {
  transform: rotateX(-90deg) translateZ(50px);
  &::after {
    margin: -36px 0 0 -36px;
    box-shadow: 26px 26px $dice-dot-secondary, 52px 52px $dice-dot-secondary, 52px 0px $dice-dot-secondary,
      0px 52px $dice-dot-secondary;
  }
}

// Face 6 (back) - 6 pontos (2 colunas)
.back {
  transform: rotateX(180deg) translateZ(50px);
  &::after {
    margin: -40px 0 0 -30px;
    box-shadow: 40px 0px $dice-dot-secondary, 0px 30px $dice-dot-secondary, 40px 30px $dice-dot-secondary,
      0px 60px $dice-dot-secondary, 40px 60px $dice-dot-secondary;
  }
}

// ESTA É A MUDANÇA PRINCIPAL - FORÇAR CENTRALIZAÇÃO ABSOLUTA
.dice {
  position: fixed !important; // Força posição fixa
  width: $dice-size;
  height: $dice-size;
  top: 50% !important; // Força 50% do topo
  left: 50% !important; // Força 50% da esquerda
  margin-top: -50px !important; // Metade da altura negativa
  margin-left: -50px !important; // Metade da largura negativa
  transform-style: preserve-3d;
  transform: rotate3d(0, 0.9, 0.9, 90deg);
  transition: 0.5s cubic-bezier(0.42, 1.57, 0.62, 0.86);
  z-index: 9999 !important; // Z-index muito alto

  // Estado de rolagem contínua
  &.rolling {
    animation: rotatePerFace 3s cubic-bezier(0.42, 1.57, 0.62, 0.86) infinite;
  }

  // Estado de arremesso
  &.throw {
    animation: rotateDice 0.7s ease-in reverse, throwDice 1s linear;
  }
}

// Container simplificado - apenas para estrutura
.dice-area {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  pointer-events: none;
  z-index: 9998;
}

// Wrapper simplificado
.diceWrap {
  position: relative;
  width: 100%;
  height: 100%;
  pointer-events: none;

  // Permite interação apenas com o dado
  .dice {
    pointer-events: auto;
  }

  // Sombra ajustada para o centro
  &::after {
    content: '';
    position: fixed;
    width: 70px;
    height: 10px;
    top: 50%;
    left: 50%;
    margin-top: 60px; // Abaixo do dado
    margin-left: -35px; // Centraliza a sombra
    background: $dice-shadow-color;
    border-radius: 100%;
    filter: blur(10px);
    z-index: 9997;
  }
}

// Animações ajustadas para manter centralização
@keyframes rotateDice {
  30% {
    transform: rotate3d(1, 1, 1, 0deg);
    top: 50% !important;
    left: 50% !important;
  }
  100% {
    transform: rotate3d(1, 1, 1, 720deg);
    top: 50% !important;
    left: 50% !important;
  }
}

@keyframes rotatePerFace {
  16% {
    transform: rotate3d(-0.1, 0.6, -0.4, 180deg);
  }
  32% {
    transform: rotate3d(-0.85, -0.42, 0.73, 180deg);
  }
  48% {
    transform: rotate3d(-0.8, 0.3, -0.75, 180deg);
  }
  64% {
    transform: rotate3d(0.3, 0.45, 0.9, 180deg);
  }
  80% {
    transform: rotate3d(-0.16, 0.6, 0.18, 180deg);
  }
  100% {
    transform: rotate3d(-0.1, 0.3, -1, 180deg);
  }
}

// Animação de salto ajustada
@keyframes throwDice {
  20% {
    margin-top: -150px !important;
  }
  40% {
    margin-top: -50px !important;
  }
  60% {
    margin-top: -80px !important;
  }
  80% {
    margin-top: -50px !important;
  }
  85% {
    margin-top: -60px !important;
  }
  90% {
    margin-top: -50px !important;
  }
  95% {
    margin-top: -53px !important;
  }
  100% {
    margin-top: -50px !important;
  }
}

// Responsividade com centralização forçada
@media (max-width: 1024px) {
  .dice {
    transform: scale(0.9) rotate3d(0, 0.9, 0.9, 90deg);
  }
}

@media (max-width: 768px) {
  .dice {
    transform: scale(0.8) rotate3d(0, 0.9, 0.9, 90deg);
  }
}

@media (max-width: 480px) {
  .dice {
    transform: scale(0.7) rotate3d(0, 0.9, 0.9, 90deg);
  }

  .diceFace {
    border-width: 1px;
  }
}
